"use client";
import Link from "next/link";
import {
  AppBar,
  Box,
  Button,
  Collapse,
  Toolbar,
  Typography,
} from "@mui/material";
import Image from "next/image";
import { useEffect, useState } from "react";
import { useRouter } from "next/navigation";
import dayjs from "dayjs";

// primary=#FDF9F9
// secondary=#EE7376 hover=#ea5054
// tertiary=#7C5F35

//sidebard w-271.2

const HomePageNavbar = () => {
  var relativeTime = require("dayjs/plugin/relativeTime");
  dayjs.extend(relativeTime);
  const router = useRouter();

  const [loggedInUserName, setLoggedInUserName] = useState("");
  const [loggedInUserId, setLoggedInUserId] = useState("");

  const handleLogout = async () => {
    let auditId =
      typeof window !== "undefined" && window.localStorage
        ? localStorage.getItem("auditId")
        : "";

    const postData = {
      method: "PUT",
      headers: {
        "Content-Type": "application/json",
      },
      body: JSON.stringify({
        timeOut: dayjs().format("MMM DD, YYYY hh:mma"),
      }),
    };

    try {
      const res = await fetch(
        `http://localhost:3000/api/sign-in?` +
          new URLSearchParams({
            auditId: auditId,
          }),
        postData
      );
      const response = await res.json();
    } catch (error) {
      console.log(error);
    }

    localStorage.clear();
    router.push("/");
  };

  const handleSignIn = async () => {
    router.push("/sign-in");
  };

  const handleSignUp = async () => {
    router.push("/sign-up");
  };

  useEffect(() => {
    const userId =
      typeof window !== "undefined" && window.localStorage
        ? localStorage.getItem("accountId")
        : "";
    const userName =
      typeof window !== "undefined" && window.localStorage
        ? localStorage.getItem("userName")
        : "";

    {
      userId && setLoggedInUserId(userId);
    }

    {
      userName && setLoggedInUserName(userName);
    }
  }, []);

  return (
    <AppBar sx={{ bgcolor: "#EE7376", padding: "12px", zIndex: "50" }}>
      <Toolbar>
        <Box sx={{ display: "flex", flexDirection: "row", marginLeft: "65px" }}>
          <Typography
            sx={{ fontSize: "40px", fontWeight: "bold" }}
            className="font-mono"
          >
            Huge
          </Typography>
          <Typography
            className="font-mono"
            sx={{ fontSize: "40px", fontWeight: "bold" }}
          >
            Bites
          </Typography>
        </Box>
        <Box
          sx={{
            marginLeft: "auto",
          }}
        >
          {/* {!loggedInUserId ? (
            <Box sx={{ marginRight: "55px" }}>
              <Button
                component="button"
                sx={{
                  color: "white",
                  fontSize: "30px",
                  fontWeight: "bold",
                  marginRight: "25px",
                  "&:hover": {
                    backgroundColor: "#ea5054",
                    transitionDuration: "0.8s",
                  },
                }}
                className="font-mono text-xl"
                onClick={() => handleSignIn()}
              >
                Sign in
              </Button>
              <Button
                component="button"
                sx={{
                  color: "white",
                  fontSize: "30px",
                  fontWeight: "bold",
                  "&:hover": {
                    backgroundColor: "#ea5054",
                    transitionDuration: "0.8s",
                  },
                }}
                className="font-mono text-xl"
                onClick={() => handleSignUp()}
              >
                Sign Up
              </Button>
            </Box>
          ) : (
            <Box>
              <span>
                Welcome, {loggedInUserName} <br />
              </span>
              <Box
                // config={{ duration: 5000 }}
                className="duration-1000"
                component="button"
                sx={{
                  color: "white",
                  textAlign: "start",
                  "&:hover": {
                    //   // backgroundColor: "#ea5054",
                    textDecorationLine: "underline",
                  },
                }}
                onClick={(e) => handleLogout()}
              >
                Logout
              </Box>
            </Box>
          )} */}
        </Box>
      </Toolbar>
    </AppBar>
  );
};

export default HomePageNavbar;

"use client";
import {
  Box,
  Drawer,
  Link,
  List,
  ListItem,
  ListItemButton,
  ListItemIcon,
  ListItemText,
  Typography,
} from "@mui/material";
import { useRouter } from "next/navigation";
import GroupsRoundedIcon from "@mui/icons-material/GroupsRounded";
import MenuBookRoundedIcon from "@mui/icons-material/MenuBookRounded";
import ShoppingBasketRoundedIcon from "@mui/icons-material/ShoppingBasketRounded";
import ControlPointDuplicateRoundedIcon from "@mui/icons-material/ControlPointDuplicateRounded";
import HourglassBottomIcon from "@mui/icons-material/HourglassBottom";
import InventoryRoundedIcon from "@mui/icons-material/InventoryRounded";
import SummarizeRoundedIcon from "@mui/icons-material/SummarizeRounded";
import ContactMailRoundedIcon from "@mui/icons-material/ContactMailRounded";
import MenuRoundedIcon from "@mui/icons-material/MenuRounded";
import { useState } from "react";

const AdminSidebar = ({ props }) => {
  const router = useRouter();

  // const [openDraw, setOpenDraw] = useState(drawerState);

  const routes = [
    {
      id: 1,
      name: "Account",

      icon: <GroupsRoundedIcon />,
      route: "accounts",
    },
    {
      id: 2,
      name: "Menu",
      icon: <MenuBookRoundedIcon />,
      route: "menu",
    },
    {
      id: 3,
      name: "Orders",
      icon: <ShoppingBasketRoundedIcon />,
      route: "orders",
    },
    {
      id: 4,
      name: "Customization",
      icon: <ControlPointDuplicateRoundedIcon />,
      route: "customization",
    },
    {
      id: 5,
      name: "Audit",
      icon: <HourglassBottomIcon />,
      route: "audit",
    },
    {
      id: 6,
      name: "Inventory",
      icon: <InventoryRoundedIcon />,
      route: "inventory ",
    },
    {
      id: 7,
      name: "Reports",
      icon: <SummarizeRoundedIcon />,
      route: "reports",
    },
    {
      id: 8,
      name: "Request",
      icon: <ContactMailRoundedIcon />,
      route: "admin/request",
    },
  ];

  return (
    <Drawer
      sx={{
        overflowY: "auto",
        height: "calc(100vh - 88px)",
        marginTop: "88px",
        top: 72,
      }}
      open={props}
    >
      <Box
        sx={{
          display: "flex",
          flexDirection: "row",
          paddingLeft: "30px",
          paddingRight: "30px",
          paddingTop: "12px",
          paddingBottom: "12px",
        }}
      >
        <Box component="button">
          <MenuRoundedIcon />
        </Box>
        <Box
          component="img"
          sx={{
            height: "60px",
            width: "45px",
          }}
          alt="huge-bites-logo"
          src="/initial-images/Logo.png"
        />
        <Typography
          // sx={{ fontSize: "40px" }}
          // className="font-mono font-extrabold"
          sx={{ fontFamily: "cursive", fontWeight: "800", fontSize: "40px" }}
        >
          HugeBites
        </Typography>
      </Box>
      <List>
        {routes.map((items) => (
          <ListItem
            button
            key={items.id}
            onClick={() => router.push(items.route)}
            sx={{
              "&:hover": {
                backgroundColor: "#e6e6e6",
                transitionDuration: "0.3s",
                boxShadow: "3",
              },
            }}
          >
            <ListItemIcon sx={{ color: "black" }}>{items.icon} </ListItemIcon>
            <Typography sx={{ fontFamily: "cursive", fontWeight: "800" }}>
              {items.name}
            </Typography>
            {/* <ListItemButton
              sx={{
                "&:hover": {
                  background: "transparent",
                },
              }}
            >
              <Link
                sx={{ color: "white", textDecoration: "none" }}
                href={`/${items.route}`}
              >
                <ListItemText
                  primary={items.name}
                  sx={{
                    "& span": {
                      fontSize: "20px",
                    },
                  }}
                />
              </Link>
            </ListItemButton> */}
          </ListItem>
        ))}
      </List>
    </Drawer>
  );
};

export default AdminSidebar;
